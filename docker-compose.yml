services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: aparca/app:latest
    container_name: aparca_app
    working_dir: /var/www
    volumes:
      - ./:/var/www:rw
      # Vol√∫menes nombrados para evitar problemas de permisos
      - storage_data:/var/www/storage
      - cache_data:/var/www/bootstrap/cache
    depends_on:
      - mariadb
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      PHP_MEMORY_LIMIT: 512M
    networks: [aparca_net]

  nginx:
    image: nginx:alpine
    container_name: aparca_nginx
    ports:
      - "8088:80"
    volumes:
      - ./:/var/www:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - app
    networks: [aparca_net]

  mariadb:
    image: mariadb:11
    container_name: aparca_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: aparca
      MYSQL_USER: aparca
      MYSQL_PASSWORD: aparcapass
    ports:
      - "33068:3306"
    volumes:
      - mariadb_data_aparca:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h localhost -u$$MYSQL_USER -p$$MYSQL_PASSWORD || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [aparca_net]

  composer:
    image: composer:latest
    container_name: aparca_composer
    working_dir: /app
    volumes:
      - ./:/app
    command: ["composer", "install", "--no-interaction", "--prefer-dist"]
    depends_on:
      - app
    networks: [aparca_net]

networks:
  aparca_net:

volumes:
  mariadb_data_aparca:
  storage_data:
  cache_data:
